name: Deploy to MonsterASP.NET

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v4
    
    # Step 2: Setup .NET 8
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    # Step 3: Restore dependencies (with caching for speed)
    - name: Restore dependencies
      run: dotnet restore
    
    # Step 4: Build and Publish in one step (faster)
    - name: Build and Publish
      run: dotnet publish --configuration Release --output ./publish
    
    # Step 5: Create app_offline.htm to stop the application
    - name: Create app_offline.htm
      run: echo "App is updating, please wait..." > ./publish/app_offline.htm
    
    # Step 6: Install SFTP tools
    - name: Install lftp
      run: sudo apt-get update && sudo apt-get install -y lftp
    
    # Step 7: Upload app_offline.htm first to stop the app
    - name: Stop Application
      env:
        FTP_SERVER: ${{ secrets.FTP_SERVER }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        lftp -c "
        set sftp:auto-confirm yes
        set ssl:verify-certificate no
        open -u $FTP_USERNAME,$FTP_PASSWORD sftp://$FTP_SERVER:22
        put -O /wwwroot ./publish/app_offline.htm
        bye
        "
    
    # Step 8: Wait for app to stop
    - name: Wait for application to stop
      run: sleep 5
    
    # Step 9: Deploy files (faster without --delete-first)
    - name: Deploy to SFTP
      env:
        FTP_SERVER: ${{ secrets.FTP_SERVER }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        lftp -c "
        set sftp:auto-confirm yes
        set ssl:verify-certificate no
        set net:max-retries 3
        set net:timeout 30
        open -u $FTP_USERNAME,$FTP_PASSWORD sftp://$FTP_SERVER:22
        mirror -R --only-newer --no-perms --parallel=4 ./publish /wwwroot
        bye
        "
    
    # Step 10: Remove app_offline.htm to restart the app
    - name: Start Application
      env:
        FTP_SERVER: ${{ secrets.FTP_SERVER }}
        FTP_USERNAME: ${{ secrets.FTP_USERNAME }}
        FTP_PASSWORD: ${{ secrets.FTP_PASSWORD }}
      run: |
        lftp -c "
        set sftp:auto-confirm yes
        set ssl:verify-certificate no
        open -u $FTP_USERNAME,$FTP_PASSWORD sftp://$FTP_SERVER:22
        rm /wwwroot/app_offline.htm
        bye
        "
